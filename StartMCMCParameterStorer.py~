#This class serves as the repository for start MCMC parameters.
#It is needed so that I have a fixed reference for where I started each MCMC chain.
#These will need to be updated as we change which parameters we want to modify.
#Note that which parameters you specify here will always need to be kept consistent with the MCMCParametersToVary in the dSphParametersStorer file.
#The numerical label of each start parameter set (what will appear in the name of the output file that uses a given set of start parameters) is the position of the parameter set in the storage array (starting from 0).  

import math
import random 
from BackgroundMCMCInformationStorer import BackgroundStorer
from samplingFunctions import constrainedUniform
from samplingFunctions import varyUnitVector
from samplingFunctions import elSurrogateUniform

class StartMCMCParameterStorer:

    #Returns the start parameter dictionary for the system with the disk or without it.  
    def getStartParameters(self, index, withDisk = 0):
        if withDisk:
            print (len(self.startParametersWithDisk) ) 
            params_to_store = self.startParametersWithDisk[index]
        else:
            params_to_store = self.startParametersWithoutDisk[index]
        param_dict = {}
        for key in self.startParamIndeces:
            param_dict[key] = params_to_store[self.startParamIndeces[key]]
        return param_dict
    #The hardcoded start parameters.
    #Note that if you change these, then the labels on the MCMC output files will no longer be quite valid, so it may be worth archiving old versions of this class as modifications are made.  
    def __init__(self, draw = 'random'):
        #self.startParamIndeces = {'M':0,'rs':1,'phi':2,'theta':3,'zeta':4,'el':5,'eps':6,'a':7,'b':8,'lam':9}
        BackgroundInfo = BackgroundStorer ()
        self.startParamIndeces = {'M':0,'rs':1,'halo_sym_axis':2,'halo_center':3,'Rd':4,'el':5,'eps':6,'disk_sym_axis':7,'disk_center':8,'lam':9}
        self.param_ranges = BackgroundInfo.param_ranges
        self.param_step_sizes = BackgroundInfo.param_step_sizes
        self.r_half_light = 791.0
        self.M_star = 10.0 ** 7.39 
        # M, rs, halo_sym_axis, halo_center, zeta, el, eps, disk_sym_axis, disk_center, lam 
        if draw == 'random':
            #Draw from start parameters randomly determined within a reasonable parameter space
            self.startParametersWithoutDisk =[[33.2098 * self.M_star, self.r_half_light * 2.40463, [-0.06359, -0.01797, 0.92016], [ 0.931289 * self.r_half_light, 0.0, -0.160347 * self.r_half_light], self.r_half_light, 6.102, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [76.0015 * self.M_star, self.r_half_light * 4.58130, [-0.68151, 0.14758, 0.04311],  [ 0.071182 * self.r_half_light, 0.0, -0.439432 * self.r_half_light], self.r_half_light, 0.131, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [243.756 * self.M_star, self.r_half_light * 6.85736, [-0.73428, 0.60676, 0.20308],  [ 0.308487 * self.r_half_light, 0.0, -0.710001 * self.r_half_light], self.r_half_light, 8.031, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [49.9908 * self.M_star, self.r_half_light * 3.64581, [-0.36101, -0.45968, 0.67935], [-0.105918 * self.r_half_light, 0.0,  0.021938 * self.r_half_light], self.r_half_light, 0.149, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [359.741 * self.M_star, self.r_half_light * 3.64197, [-0.11814, 0.06451, 0.49192],  [ 0.084916 * self.r_half_light, 0.0,  0.222427 * self.r_half_light], self.r_half_light, 6.467, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [10.6003 * self.M_star, self.r_half_light * 7.88415, [-0.24971, 0.72445, 0.60275],  [ 0.991573 * self.r_half_light, 0.0, -0.848307 * self.r_half_light], self.r_half_light, 0.103, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [94.6352 * self.M_star, self.r_half_light * 6.29512, [0.70303, -0.28512, 0.01099],  [-0.699474 * self.r_half_light, 0.0,  0.926123 * self.r_half_light], self.r_half_light, 1.281, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [32.0792 * self.M_star, self.r_half_light * 8.75576, [0.10046, 0.76190, 0.49025],   [ 0.845711 * self.r_half_light, 0.0, -0.690266 * self.r_half_light], self.r_half_light, 0.112, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [224.299 * self.M_star, self.r_half_light * 3.25532, [0.11986, 0.50397, 0.18424],   [ 0.027837 * self.r_half_light, 0.0,  0.735703 * self.r_half_light], self.r_half_light, 8.433, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [170.094 * self.M_star, self.r_half_light * 3.29244, [-0.02893, -0.92939, 0.03744], [-0.113862 * self.r_half_light, 0.0, -0.632998 * self.r_half_light], self.r_half_light, 0.175, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [326.867 * self.M_star, self.r_half_light * 8.51755, [-0.39061, -0.01523, 0.0419],  [-0.866768 * self.r_half_light, 0.0,  0.915189 * self.r_half_light], self.r_half_light, 6.434, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [30.1313 * self.M_star, self.r_half_light * 7.00521, [0.15434, -0.22401, 0.05141],  [-0.451551 * self.r_half_light, 0.0, -0.813468 * self.r_half_light], self.r_half_light, 0.455, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [341.647 * self.M_star, self.r_half_light * 4.74737, [0.09645, 0.10003, 0.15474],   [-0.111719 * self.r_half_light, 0.0,  0.707548 * self.r_half_light], self.r_half_light, 8.235, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [364.523 * self.M_star, self.r_half_light * 3.21550, [0.89324, 0.00262, 0.27069],   [ 0.409562 * self.r_half_light, 0.0,  0.472091 * self.r_half_light], self.r_half_light, 0.336, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [170.426 * self.M_star, self.r_half_light * 5.16923, [0.42512, -0.49009, 0.63460],  [ 0.999177 * self.r_half_light, 0.0,  0.809342 * self.r_half_light], self.r_half_light, 4.631, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [317.728 * self.M_star, self.r_half_light * 3.28685, [0.48098, 0.14876, 0.68992],   [-0.113046 * self.r_half_light, 0.0, -0.406528 * self.r_half_light], self.r_half_light, 0.372, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [362.203 * self.M_star, self.r_half_light * 6.30652, [-0.05124, -0.39002, 0.63549], [ 0.683266 * self.r_half_light, 0.0,  0.151801 * self.r_half_light], self.r_half_light, 5.417, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [309.452 * self.M_star, self.r_half_light * 9.40949, [-0.73533, 0.27922, 0.08652],  [-0.400037 * self.r_half_light, 0.0,  0.321842 * self.r_half_light], self.r_half_light, 0.666, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [80.2184 * self.M_star, self.r_half_light * 4.34019, [-0.08978, -0.49215, 0.5346],  [-0.383851 * self.r_half_light, 0.0,  0.435933 * self.r_half_light], self.r_half_light, 3.869, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [288.710 * self.M_star, self.r_half_light * 4.45108, [0.57384, -0.31836, 0.60926],  [ 0.839351 * self.r_half_light, 0.0,  0.478494 * self.r_half_light], self.r_half_light, 0.153, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [329.540 * self.M_star, self.r_half_light * 1.94879, [-0.00659, -0.49763, 0.11612], [ 0.673005 * self.r_half_light, 0.0,  0.519243 * self.r_half_light], self.r_half_light, 2.835, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [316.644 * self.M_star, self.r_half_light * 5.54665, [-0.52118, 0.19206, 0.43382],  [-0.818049 * self.r_half_light, 0.0,  0.456168 * self.r_half_light], self.r_half_light, 0.258, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [351.974 * self.M_star, self.r_half_light * 7.69308, [0.04933, -0.58622, 0.19584],  [-0.114996 * self.r_half_light, 0.0, -0.308072 * self.r_half_light], self.r_half_light, 7.775, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [1.30646 * self.M_star, self.r_half_light * 8.94678, [-0.71056, -0.49361, 0.25157], [-0.746779 * self.r_half_light, 0.0, -0.195189 * self.r_half_light], self.r_half_light, 0.387, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [244.485 * self.M_star, self.r_half_light * 4.19878, [0.80002, 0.52432, 0.08064],   [ 0.395217 * self.r_half_light, 0.0, -0.923268 * self.r_half_light], self.r_half_light, 7.363, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [174.898 * self.M_star, self.r_half_light * 6.33529, [0.44090, -0.30206, 0.78671],  [-0.271076 * self.r_half_light, 0.0,  0.241789 * self.r_half_light], self.r_half_light, 0.290, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [212.641 * self.M_star, self.r_half_light * 4.47719, [-0.72153, 0.02388, 0.61768],  [-0.983529 * self.r_half_light, 0.0,  0.886849 * self.r_half_light], self.r_half_light, 3.421, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [394.141 * self.M_star, self.r_half_light * 7.78911, [0.8096, 0.37985, 0.12231],    [-0.926019 * self.r_half_light, 0.0,  0.205662 * self.r_half_light], self.r_half_light, 0.220, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [36.2004 * self.M_star, self.r_half_light * 0.34282, [0.56108, -0.22852, 0.46365],  [ 0.667165 * self.r_half_light, 0.0, -0.175201 * self.r_half_light], self.r_half_light, 2.816, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [27.7382 * self.M_star, self.r_half_light * 4.63981, [0.61714, -0.32227, 0.56383],  [ 0.264839 * self.r_half_light, 0.0,  0.923001 * self.r_half_light], self.r_half_light, 0.178, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [158.105 * self.M_star, self.r_half_light * 2.74217, [-0.55506, -0.31206, 0.12619], [-0.355355 * self.r_half_light, 0.0, -0.370042 * self.r_half_light], self.r_half_light, 8.937, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [364.086 * self.M_star, self.r_half_light * 9.72036, [-0.40152, 0.20618, 0.64831],  [-0.005521 * self.r_half_light, 0.0,  0.106930 * self.r_half_light], self.r_half_light, 0.256, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [298.880 * self.M_star, self.r_half_light * 8.30054, [0.37486, -0.74585, 0.44142],  [ 0.503805 * self.r_half_light, 0.0,  0.809693 * self.r_half_light], self.r_half_light, 9.700, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [333.780 * self.M_star, self.r_half_light * 4.91279, [-0.34021, -0.52407,0.23569],  [-0.815147 * self.r_half_light, 0.0, -0.201820 * self.r_half_light], self.r_half_light, 0.102, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [218.733 * self.M_star, self.r_half_light * 9.71805, [0.21806, -0.34819, 0.74236],  [ 0.131029 * self.r_half_light, 0.0, -0.131214 * self.r_half_light], self.r_half_light, 6.140, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [291.068 * self.M_star, self.r_half_light * 8.90565, [-0.35566, -0.28895, 0.16422], [-0.905713 * self.r_half_light, 0.0,  0.001587 * self.r_half_light], self.r_half_light, 0.163, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [27.8322 * self.M_star, self.r_half_light * 9.31273, [-0.25770, -0.22602, 0.65810], [-0.969475 * self.r_half_light, 0.0,  0.615186 * self.r_half_light], self.r_half_light, 6.080, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [155.007 * self.M_star, self.r_half_light * 3.74650, [0.73302, -0.65836, 0.00382],  [ 0.817637 * self.r_half_light, 0.0,  0.284261 * self.r_half_light], self.r_half_light, 0.112, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [297.019 * self.M_star, self.r_half_light * 1.70005, [0.47097, 0.17027, 0.45018],   [-0.456172 * self.r_half_light, 0.0,  0.943982 * self.r_half_light], self.r_half_light, 5.495, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [156.967 * self.M_star, self.r_half_light * 8.53027, [-0.42381, 0.73640, 0.36167],  [-0.707703 * self.r_half_light, 0.0, -0.525231 * self.r_half_light], self.r_half_light, 0.375, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [162.881 * self.M_star, self.r_half_light * 9.55432, [0.31775, 0.30951, 0.57559],   [-0.630136 * self.r_half_light, 0.0,  0.539884 * self.r_half_light], self.r_half_light, 3.547, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [355.597 * self.M_star, self.r_half_light * 0.25964, [0.51878, -0.27079, 0.29728],  [ 0.895990 * self.r_half_light, 0.0,  0.923338 * self.r_half_light], self.r_half_light, 0.127, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1]
                                              ]
        elif draw == 'best_fit':
            self.startParametersWithoutDisk =[[9780.0 * 10.0 ** 6.0, 7280.0, [0.7181262977631888, 0.0, -0.6959127965923143], [-71.0, 0.0, -143.0], 1.0, 0.425, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #NFW Obl WOD
                                              [9770.0 * 10.0 ** 6.0, 3920.0, [0.6971651028545646, 0.0,  0.7169106076504828], [-70.0, 0.0, -144.0], 1.0, 2.17, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #NFW Pro WOD
                                              [3600.0 * 10.0 ** 6.0, 1920.0, [0.7217602280983619, 0.0, -0.692143173870407 ], [-72.0, 0.0, -144.0], 1.0, 0.470, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Obl WOD
                                              [3100.0 * 10.0 ** 6.0, 1000.0, [0.6921431738704068, 0.0,  0.7217602280983622], [-73.0, 0.0, -144.0], 1.0, 2.04, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Pro WOD
                                              [500.0 * 10.0 ** 6.0 , 1450.0, [0.7241718614374677, 0.0, -0.6896195437356695], [-74.0, 0.0, -145.0], 1.0, 0.501, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #Burkert Obl WOD
                                              [440.0 * 10.0 ** 6.0 ,  810.0, [0.6883545756937539, 0.0,  0.7253743710122877], [-74.0, 0.0, -145.0], 1.0, 1.901, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1]  #Burkert Pro WOD
                                              ]
        elif draw == 'best_fit_bootstrap':
            self.startParametersWithoutDisk =[[9640.0 * 10.0 ** 6.0, 7180.0, [ 0.717,  0.0   , -0.697], [-71.0, 0.0, -143.0], 1.0, 0.429, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #NFW Obl WOD
                                              [9670.0 * 10.0 ** 6.0, 3890.0, [0.698, 0.0   , 0.716], [-70.0, 0.0, -143.0],  1.0, 2.160, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #NFW Pro WOD
                                              [3500.0 * 10.0 ** 6.0, 1882.0, [0.721,  0.0   , -0.693], [-72.0, 0.0, -143.0], 1.0, 0.467, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Obl WOD
                                              [3030.0 * 10.0 ** 6.0, 987.0, [0.695, 0.0   , 0.719], [-72.0, 0.0, -143.0],  1.0, 2.039, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Pro WOD
                                              [471.0 * 10.0 ** 6.0 , 1424.0, [0.721,  0.0   , -0.693], [-72.0, 0.0, -143.0], 1.0, 0.466, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #Burkert Obl WOD
                                              [413.0 * 10.0 ** 6.0 , 752.0, [0.695, 0.0   , 0.719], [-71.0, 0.0, -143.0],  1.0, 2.018, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1]  #Burkert Pro WOD
                                              ]
        elif draw == 'best_fit_random':
            best_fit_params = [[9800.0 * 10.0 ** 6.0, 7280.0, [0.7181262977631888, 0.0, -0.6959127965923143], [-70.0, 0.0, -143.0], 1.0, 0.427, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #NFW Obl WOD                                              
                               [9800.0 * 10.0 ** 6.0, 3940.0, [0.6971651028545646, 0.0, 0.7169106076504828], [-70.0, 0.0, -144.0],  1.0, 2.16, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #NFW Pro WOD                                              
                               [3560.0 * 10.0 ** 6.0, 1900.0, [0.7229671459095686, 0.0, -0.690882411076858], [-72.0, 0.0, -144.0], 1.0, 0.466, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Obl WOD                                              
                               [3060.0 * 10.0 ** 6.0, 990.0, [0.6921431738704068, 0.0, 0.7217602280983622], [-72.0, 0.0, -144.0],  1.0, 2.04, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Pro WOD                                              
                               [470.0 * 10.0 ** 6.0 , 1430.0, [0.7229671459095686, 0.0, -0.690882411076858], [-72.0, 0.0, -144.0], 1.0, 0.466, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #Burkert Obl WOD                                              
                               [410.0 * 10.0 ** 6.0 , 750.0, [0.693401828275813, 0.0, 0.7205511116803305], [-71.0, 0.0, -144.0],  1.0, 2.02, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1]  #Burkert Pro WOD
                                              ]
            self.draw_widths = [5.0 * self.M_star, 2.0 * self.r_half_light, 0.1, [50.0, 0.0, 50.0], 0.0, 0.1, 0.0, 0.0, [0.0, 0.0, 0.0], 0.0]
            randomization_start_steps = [] 
            self.startParametersWithoutDisk = [[constrainedUniform(params[0], self.draw_widths[0], self.param_ranges['M']), constrainedUniform(params[1], self.draw_widths[1], self.param_ranges['rs']),
                                                varyUnitVector(params[2], self.draw_widths[2], fixed_values = {1: 0.0}),
                                                [constrainedUniform(params[3][0], self.draw_widths[3][0], self.param_ranges['h_x_center']), 0.0, constrainedUniform(params[3][2], self.draw_widths[3][2], self.param_ranges['h_z_center'])],
                                                params[4], elSurrogateUniform(params[5], self.draw_widths[5], self.param_ranges['el']),
                                                params[6], params[7], params[8], params[9]]
                                              for params in best_fit_params]
        elif draw == 'test':
            self.startParametersWithoutDisk =[[2.023644847128327847e+09, 3.011400279999999839e+03, [6.114354707349896056e-01,0.0,-7.912942974185279699e-01], [-1.276999999999999886e+02,0.0,8.750000000000000000e+01], 1.0, 1.749999999999999889e-01, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #NFW Obl WOD (from start param = 9) target_likelihood = 2.108236030365676561e+04
                                              [2.023644847128327847e+09, 3.011400279999999839e+03, [6.114354707349896056e-01, 0.0, -7.912942974185279699e-01], [-1.276999999999999886e+02, 0.0, 8.750000000000000000e+01],  1.0, 5.714285714285714413e+00, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #NFW Pro WOD (from start param = 9) target_likelihood = 2.045569989732860995e+04
                                              [2.023644847128327847e+09, 3.011400279999999839e+03, [6.114354707349896056e-01, 0.0, -7.912942974185279699e-01], [-1.276999999999999886e+02, 0.0, 8.750000000000000000e+01], 1.0, 1.749999999999999889e-01, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Obl WOD (from start param = 9) target_liklihood = 2.080252594354362373e+04 
                                              [2.023644847128327847e+09, 3.011400279999999839e+03, [6.114354707349896056e-01, 0.0, -7.912942974185279699e-01], [-1.276999999999999886e+02, 0.0, 8.750000000000000000e+01],  1.0, 5.714285714285714413e+00, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Pro WOD (from start param = 9) target_liklihood = 2.021626550687130293e+04 
                                              [1.190855390975193739e+09 , 5.566678319999999985e+03, [5.453209358290151965e-01, 0.0, 8.382273420418634435e-01], [-1.276999999999999886e+02, 0.0, -2.791999999999999886e+02], 1.0, 1.185817621249851822e-01, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #Burkert Obl WOD (from start param = 8) target_likelihood = 2.070609255126753851e+04
                                              [2.023644847128327847e+09 , 3.011400279999999839e+03, [6.114354707349896056e-01, 0.0, -7.912942974185279699e-01], [-1.276999999999999886e+02, 0.0, 8.750000000000000000e+01],  1.0, 5.714285714285714413e+00, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1]  #Burkert Pro WOD (from start param = 9) target_likelihood = 2.039299063390566880e+04 
                                              ]

        else:
            self.startParametersWithoutDisk =[[33.2098 * self.M_star, self.r_half_light * 2.40463, [-0.06359, -0.01797, 0.92016], [ 0.931289 * self.r_half_light, 0.0, -0.160347 * self.r_half_light], self.r_half_light, 6.102, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [76.0015 * self.M_star, self.r_half_light * 4.58130, [-0.68151, 0.14758, 0.04311],  [ 0.071182 * self.r_half_light, 0.0, -0.439432 * self.r_half_light], self.r_half_light, 0.131, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [243.756 * self.M_star, self.r_half_light * 6.85736, [-0.73428, 0.60676, 0.20308],  [ 0.308487 * self.r_half_light, 0.0, -0.710001 * self.r_half_light], self.r_half_light, 8.031, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [49.9908 * self.M_star, self.r_half_light * 3.64581, [-0.36101, -0.45968, 0.67935], [-0.105918 * self.r_half_light, 0.0,  0.021938 * self.r_half_light], self.r_half_light, 0.149, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [359.741 * self.M_star, self.r_half_light * 3.64197, [-0.11814, 0.06451, 0.49192],  [ 0.084916 * self.r_half_light, 0.0,  0.222427 * self.r_half_light], self.r_half_light, 6.467, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [10.6003 * self.M_star, self.r_half_light * 7.88415, [-0.24971, 0.72445, 0.60275],  [ 0.991573 * self.r_half_light, 0.0, -0.848307 * self.r_half_light], self.r_half_light, 0.103, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [94.6352 * self.M_star, self.r_half_light * 6.29512, [0.70303, -0.28512, 0.01099],  [-0.699474 * self.r_half_light, 0.0,  0.926123 * self.r_half_light], self.r_half_light, 1.281, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [32.0792 * self.M_star, self.r_half_light * 8.75576, [0.10046, 0.76190, 0.49025],   [ 0.845711 * self.r_half_light, 0.0, -0.690266 * self.r_half_light], self.r_half_light, 0.112, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [224.299 * self.M_star, self.r_half_light * 3.25532, [0.11986, 0.50397, 0.18424],   [ 0.027837 * self.r_half_light, 0.0,  0.735703 * self.r_half_light], self.r_half_light, 8.433, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [170.094 * self.M_star, self.r_half_light * 3.29244, [-0.02893, -0.92939, 0.03744], [-0.113862 * self.r_half_light, 0.0, -0.632998 * self.r_half_light], self.r_half_light, 0.175, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [326.867 * self.M_star, self.r_half_light * 8.51755, [-0.39061, -0.01523, 0.0419],  [-0.866768 * self.r_half_light, 0.0,  0.915189 * self.r_half_light], self.r_half_light, 6.434, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [30.1313 * self.M_star, self.r_half_light * 7.00521, [0.15434, -0.22401, 0.05141],  [-0.451551 * self.r_half_light, 0.0, -0.813468 * self.r_half_light], self.r_half_light, 0.455, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [341.647 * self.M_star, self.r_half_light * 4.74737, [0.09645, 0.10003, 0.15474],   [-0.111719 * self.r_half_light, 0.0,  0.707548 * self.r_half_light], self.r_half_light, 8.235, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [364.523 * self.M_star, self.r_half_light * 3.21550, [0.89324, 0.00262, 0.27069],   [ 0.409562 * self.r_half_light, 0.0,  0.472091 * self.r_half_light], self.r_half_light, 0.336, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [170.426 * self.M_star, self.r_half_light * 5.16923, [0.42512, -0.49009, 0.63460],  [ 0.999177 * self.r_half_light, 0.0,  0.809342 * self.r_half_light], self.r_half_light, 4.631, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [317.728 * self.M_star, self.r_half_light * 3.28685, [0.48098, 0.14876, 0.68992],   [-0.113046 * self.r_half_light, 0.0, -0.406528 * self.r_half_light], self.r_half_light, 0.372, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [362.203 * self.M_star, self.r_half_light * 6.30652, [-0.05124, -0.39002, 0.63549], [ 0.683266 * self.r_half_light, 0.0,  0.151801 * self.r_half_light], self.r_half_light, 5.417, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [309.452 * self.M_star, self.r_half_light * 9.40949, [-0.73533, 0.27922, 0.08652],  [-0.400037 * self.r_half_light, 0.0,  0.321842 * self.r_half_light], self.r_half_light, 0.666, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [80.2184 * self.M_star, self.r_half_light * 4.34019, [-0.08978, -0.49215, 0.5346],  [-0.383851 * self.r_half_light, 0.0,  0.435933 * self.r_half_light], self.r_half_light, 3.869, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [288.710 * self.M_star, self.r_half_light * 4.45108, [0.57384, -0.31836, 0.60926],  [ 0.839351 * self.r_half_light, 0.0,  0.478494 * self.r_half_light], self.r_half_light, 0.153, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [329.540 * self.M_star, self.r_half_light * 1.94879, [-0.00659, -0.49763, 0.11612], [ 0.673005 * self.r_half_light, 0.0,  0.519243 * self.r_half_light], self.r_half_light, 2.835, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [316.644 * self.M_star, self.r_half_light * 5.54665, [-0.52118, 0.19206, 0.43382],  [-0.818049 * self.r_half_light, 0.0,  0.456168 * self.r_half_light], self.r_half_light, 0.258, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [351.974 * self.M_star, self.r_half_light * 7.69308, [0.04933, -0.58622, 0.19584],  [-0.114996 * self.r_half_light, 0.0, -0.308072 * self.r_half_light], self.r_half_light, 7.775, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [1.30646 * self.M_star, self.r_half_light * 8.94678, [-0.71056, -0.49361, 0.25157], [-0.746779 * self.r_half_light, 0.0, -0.195189 * self.r_half_light], self.r_half_light, 0.387, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [244.485 * self.M_star, self.r_half_light * 4.19878, [0.80002, 0.52432, 0.08064],   [ 0.395217 * self.r_half_light, 0.0, -0.923268 * self.r_half_light], self.r_half_light, 7.363, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [174.898 * self.M_star, self.r_half_light * 6.33529, [0.44090, -0.30206, 0.78671],  [-0.271076 * self.r_half_light, 0.0,  0.241789 * self.r_half_light], self.r_half_light, 0.290, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [212.641 * self.M_star, self.r_half_light * 4.47719, [-0.72153, 0.02388, 0.61768],  [-0.983529 * self.r_half_light, 0.0,  0.886849 * self.r_half_light], self.r_half_light, 3.421, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [394.141 * self.M_star, self.r_half_light * 7.78911, [0.8096, 0.37985, 0.12231],    [-0.926019 * self.r_half_light, 0.0,  0.205662 * self.r_half_light], self.r_half_light, 0.220, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [36.2004 * self.M_star, self.r_half_light * 0.34282, [0.56108, -0.22852, 0.46365],  [ 0.667165 * self.r_half_light, 0.0, -0.175201 * self.r_half_light], self.r_half_light, 2.816, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [27.7382 * self.M_star, self.r_half_light * 4.63981, [0.61714, -0.32227, 0.56383],  [ 0.264839 * self.r_half_light, 0.0,  0.923001 * self.r_half_light], self.r_half_light, 0.178, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [158.105 * self.M_star, self.r_half_light * 2.74217, [-0.55506, -0.31206, 0.12619], [-0.355355 * self.r_half_light, 0.0, -0.370042 * self.r_half_light], self.r_half_light, 8.937, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [364.086 * self.M_star, self.r_half_light * 9.72036, [-0.40152, 0.20618, 0.64831],  [-0.005521 * self.r_half_light, 0.0,  0.106930 * self.r_half_light], self.r_half_light, 0.256, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [298.880 * self.M_star, self.r_half_light * 8.30054, [0.37486, -0.74585, 0.44142],  [ 0.503805 * self.r_half_light, 0.0,  0.809693 * self.r_half_light], self.r_half_light, 9.700, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [333.780 * self.M_star, self.r_half_light * 4.91279, [-0.34021, -0.52407,0.23569],  [-0.815147 * self.r_half_light, 0.0, -0.201820 * self.r_half_light], self.r_half_light, 0.102, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [218.733 * self.M_star, self.r_half_light * 9.71805, [0.21806, -0.34819, 0.74236],  [ 0.131029 * self.r_half_light, 0.0, -0.131214 * self.r_half_light], self.r_half_light, 6.140, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [291.068 * self.M_star, self.r_half_light * 8.90565, [-0.35566, -0.28895, 0.16422], [-0.905713 * self.r_half_light, 0.0,  0.001587 * self.r_half_light], self.r_half_light, 0.163, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [27.8322 * self.M_star, self.r_half_light * 9.31273, [-0.25770, -0.22602, 0.65810], [-0.969475 * self.r_half_light, 0.0,  0.615186 * self.r_half_light], self.r_half_light, 6.080, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [155.007 * self.M_star, self.r_half_light * 3.74650, [0.73302, -0.65836, 0.00382],  [ 0.817637 * self.r_half_light, 0.0,  0.284261 * self.r_half_light], self.r_half_light, 0.112, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [297.019 * self.M_star, self.r_half_light * 1.70005, [0.47097, 0.17027, 0.45018],   [-0.456172 * self.r_half_light, 0.0,  0.943982 * self.r_half_light], self.r_half_light, 5.495, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [156.967 * self.M_star, self.r_half_light * 8.53027, [-0.42381, 0.73640, 0.36167],  [-0.707703 * self.r_half_light, 0.0, -0.525231 * self.r_half_light], self.r_half_light, 0.375, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [162.881 * self.M_star, self.r_half_light * 9.55432, [0.31775, 0.30951, 0.57559],   [-0.630136 * self.r_half_light, 0.0,  0.539884 * self.r_half_light], self.r_half_light, 3.547, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1], 
                                              [355.597 * self.M_star, self.r_half_light * 0.25964, [0.51878, -0.27079, 0.29728],  [ 0.895990 * self.r_half_light, 0.0,  0.923338 * self.r_half_light], self.r_half_light, 0.127, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1]
                                              ]
        # M, rs, halo_sym_axis, halo_center, Rd, el, eps, disk_sym_axis, disk_center, lam 
        if draw == 'random':
              self.startParametersWithDisk = [[33.2098 * self.M_star, self.r_half_light * 2.40463, [-0.06359, -0.01797, 0.92016], [ 0.931289 * self.r_half_light, 0.0, -0.160347 * self.r_half_light], self.r_half_light * 0.31335, 6.102, 0.94 * 0.5, [0.35286, 0.13946, 0.07458], [self.r_half_light * -0.616464, 0.0, self.r_half_light *  0.741201], 0.146], 
                                              [76.0015 * self.M_star, self.r_half_light * 4.58130, [-0.68151, 0.14758, 0.04311],  [ 0.071182 * self.r_half_light, 0.0, -0.439432 * self.r_half_light], self.r_half_light * 0.79053, 0.131, 0.75 * 0.5, [0.13476, 0.90747, 0.18082], [self.r_half_light *  0.179174, 0.0, self.r_half_light *  0.950004], 0.053], 
                                              [243.756 * self.M_star, self.r_half_light * 6.85736, [-0.73428, 0.60676, 0.20308],  [ 0.308487 * self.r_half_light, 0.0, -0.710001 * self.r_half_light], self.r_half_light * 5.44512, 8.031, 0.21 * 0.5, [0.08247, 0.81961, 0.18082], [self.r_half_light * -0.259135, 0.0, self.r_half_light * -0.062295], 0.113], 
                                              [49.9908 * self.M_star, self.r_half_light * 3.64581, [-0.36101, -0.45968, 0.67935], [-0.105918 * self.r_half_light, 0.0,  0.021938 * self.r_half_light], self.r_half_light * 8.58897, 0.149, 0.92 * 0.5, [0.10453, 0.73033, 0.45908], [self.r_half_light * -0.322928, 0.0, self.r_half_light *  0.605429], 0.130], 
                                              [359.741 * self.M_star, self.r_half_light * 3.64197, [-0.11814, 0.06451, 0.49192],  [ 0.084916 * self.r_half_light, 0.0,  0.222427 * self.r_half_light], self.r_half_light * 6.56862, 6.467, 0.70 * 0.5, [0.29386, 0.73316, 0.54300], [self.r_half_light *  0.346246, 0.0, self.r_half_light *  0.516271], 0.079], 
                                              [10.6003 * self.M_star, self.r_half_light * 7.88415, [-0.24971, 0.72445, 0.60275],  [ 0.991573 * self.r_half_light, 0.0, -0.848307 * self.r_half_light], self.r_half_light * 9.88729, 0.103, 0.87 * 0.5, [0.50305, 0.83862, 0.09410], [self.r_half_light * -0.495998, 0.0, self.r_half_light *  0.689914], 0.147], 
                                              [94.6352 * self.M_star, self.r_half_light * 6.29512, [0.70303, -0.28512, 0.01099],  [-0.699474 * self.r_half_light, 0.0,  0.926123 * self.r_half_light], self.r_half_light * 1.70263, 1.281, 0.26 * 0.5, [0.39449, 0.25723, 0.10307], [self.r_half_light * -0.578461, 0.0, self.r_half_light * -0.256999], 0.124], 
                                              [32.0792 * self.M_star, self.r_half_light * 8.75576, [0.10046, 0.76190, 0.49025],   [ 0.845711 * self.r_half_light, 0.0, -0.690266 * self.r_half_light], self.r_half_light * 1.84246, 0.112, 0.54 * 0.5, [0.32146, 0.10639, 0.89147], [self.r_half_light * -0.905269, 0.0, self.r_half_light * -0.879323], 0.092], 
                                              [224.299 * self.M_star, self.r_half_light * 3.25532, [0.11986, 0.50397, 0.18424],   [ 0.027837 * self.r_half_light, 0.0,  0.735703 * self.r_half_light], self.r_half_light * 9.58113, 8.433, 0.41 * 0.5, [0.41739, 0.30403, 0.54962], [self.r_half_light *  0.883405, 0.0, self.r_half_light * -0.546639], 0.076], 
                                              [170.094 * self.M_star, self.r_half_light * 3.29244, [-0.02893, -0.92939, 0.03744], [-0.113862 * self.r_half_light, 0.0, -0.632998 * self.r_half_light], self.r_half_light * 2.97241, 0.175, 0.60 * 0.5, [0.54591, 0.02908, 0.46969], [self.r_half_light *  0.247234, 0.0, self.r_half_light * -0.020757], 0.088], 
                                              [326.867 * self.M_star, self.r_half_light * 8.51755, [-0.39061, -0.01523, 0.0419],  [-0.866768 * self.r_half_light, 0.0,  0.915189 * self.r_half_light], self.r_half_light * 3.59749, 6.434, 0.91 * 0.5, [0.45392, 0.71450, 0.08588], [self.r_half_light *  0.855101, 0.0, self.r_half_light *  0.263176], 0.135], 
                                              [30.1313 * self.M_star, self.r_half_light * 7.00521, [0.15434, -0.22401, 0.05141],  [-0.451551 * self.r_half_light, 0.0, -0.813468 * self.r_half_light], self.r_half_light * 9.33160, 0.455, 0.86 * 0.5, [0.00765, 0.63314, 0.09110], [self.r_half_light *  0.271353, 0.0, self.r_half_light * -0.334659], 0.103], 
                                              [341.647 * self.M_star, self.r_half_light * 4.74737, [0.09645, 0.10003, 0.15474],   [-0.111719 * self.r_half_light, 0.0,  0.707548 * self.r_half_light], self.r_half_light * 7.00513, 8.235, 0.83 * 0.5, [0.34118, 0.24194 ,0.35505], [self.r_half_light *  0.827668, 0.0, self.r_half_light *  0.218344], 0.070], 
                                              [364.523 * self.M_star, self.r_half_light * 3.21550, [0.89324, 0.00262, 0.27069],   [ 0.409562 * self.r_half_light, 0.0,  0.472091 * self.r_half_light], self.r_half_light * 8.47694, 0.336, 0.73 * 0.5, [0.15882, 0.05565, 0.94530], [self.r_half_light *  0.672264, 0.0, self.r_half_light *  0.689940], 0.124], 
                                              [170.426 * self.M_star, self.r_half_light * 5.16923, [0.42512, -0.49009, 0.63460],  [ 0.999177 * self.r_half_light, 0.0,  0.809342 * self.r_half_light], self.r_half_light * 3.74160, 4.631, 0.40 * 0.5, [0.07195, 0.57611, 0.14523], [self.r_half_light *  0.749331, 0.0, self.r_half_light *  0.340600], 0.107], 
                                              [317.728 * self.M_star, self.r_half_light * 3.28685, [0.48098, 0.14876, 0.68992],   [-0.113046 * self.r_half_light, 0.0, -0.406528 * self.r_half_light], self.r_half_light * 7.43129, 0.372, 0.46 * 0.5, [0.19318, 0.54428, 0.02894], [self.r_half_light * -0.851454, 0.0, self.r_half_light *  0.707999], 0.066], 
                                              [362.203 * self.M_star, self.r_half_light * 6.30652, [-0.05124, -0.39002, 0.63549], [ 0.683266 * self.r_half_light, 0.0,  0.151801 * self.r_half_light], self.r_half_light * 1.60497, 5.417, 0.26 * 0.5, [0.11318, 0.32292, 0.14523], [self.r_half_light * -0.420846, 0.0, self.r_half_light * -0.348548], 0.088], 
                                              [309.452 * self.M_star, self.r_half_light * 9.40949, [-0.73533, 0.27922, 0.08652],  [-0.400037 * self.r_half_light, 0.0,  0.321842 * self.r_half_light], self.r_half_light * 3.96955, 0.666, 0.54 * 0.5, [0.19318, 0.54428, 0.02894], [self.r_half_light *  0.352989, 0.0, self.r_half_light * -0.101943], 0.115], 
                                              [80.2184 * self.M_star, self.r_half_light * 4.34019, [-0.08978, -0.49215, 0.5346],  [-0.383851 * self.r_half_light, 0.0,  0.435933 * self.r_half_light], self.r_half_light * 6.34753, 3.869, 0.95 * 0.5, [0.11318, 0.32292, 0.51462], [self.r_half_light *  0.506790, 0.0, self.r_half_light * -0.335048], 0.147], 
                                              [288.710 * self.M_star, self.r_half_light * 4.45108, [0.57384, -0.31836, 0.60926],  [ 0.839351 * self.r_half_light, 0.0,  0.478494 * self.r_half_light], self.r_half_light * 1.95564, 0.153, 0.24 * 0.5, [0.10536, 0.46602, 0.22891], [self.r_half_light *  0.768552, 0.0, self.r_half_light * -0.980655], 0.121], 
                                              [329.540 * self.M_star, self.r_half_light * 1.94879, [-0.00659, -0.49763, 0.11612], [ 0.673005 * self.r_half_light, 0.0,  0.519243 * self.r_half_light], self.r_half_light * 9.37993, 2.835, 0.81 * 0.5, [0.80891, 0.16780, 0.13534], [self.r_half_light *  0.305460, 0.0, self.r_half_light * -0.369589], 0.061], 
                                              [316.644 * self.M_star, self.r_half_light * 5.54665, [-0.52118, 0.19206, 0.43382],  [-0.818049 * self.r_half_light, 0.0,  0.456168 * self.r_half_light], self.r_half_light * 6.05056, 0.258, 0.72 * 0.5, [0.40629, 0.71603, 0.19603], [self.r_half_light * -0.229001, 0.0, self.r_half_light *  0.686624], 0.121], 
                                              [351.974 * self.M_star, self.r_half_light * 7.69308, [0.04933, -0.58622, 0.19584],  [-0.114996 * self.r_half_light, 0.0, -0.308072 * self.r_half_light], self.r_half_light * 0.49236, 7.775, 0.44 * 0.5, [0.29432, 0.53399, 0.15683], [self.r_half_light *  0.766701, 0.0, self.r_half_light *  0.550899], 0.091], 
                                              [1.30646 * self.M_star, self.r_half_light * 8.94678, [-0.71056, -0.49361, 0.25157], [-0.746779 * self.r_half_light, 0.0, -0.195189 * self.r_half_light], self.r_half_light * 4.69708, 0.387, 0.91 * 0.5, [0.28926, 0.33985, 0.86246], [self.r_half_light * -0.980169, 0.0, self.r_half_light * -0.874713], 0.127], 
                                              [244.485 * self.M_star, self.r_half_light * 4.19878, [0.80002, 0.52432, 0.08064],   [ 0.395217 * self.r_half_light, 0.0, -0.923268 * self.r_half_light], self.r_half_light * 0.64386, 7.363, 0.29 * 0.5, [0.67433, 0.20126, 0.51019], [self.r_half_light *  0.042877, 0.0, self.r_half_light *  0.746211], 0.079], 
                                              [174.898 * self.M_star, self.r_half_light * 6.33529, [0.44090, -0.30206, 0.78671],  [-0.271076 * self.r_half_light, 0.0,  0.241789 * self.r_half_light], self.r_half_light * 3.90402, 0.290, 0.18 * 0.5, [0.65156, 0.24518, 0.04335], [self.r_half_light *  0.257554, 0.0, self.r_half_light * -0.334178], 0.101], 
                                              [212.641 * self.M_star, self.r_half_light * 4.47719, [-0.72153, 0.02388, 0.61768],  [-0.983529 * self.r_half_light, 0.0,  0.886849 * self.r_half_light], self.r_half_light * 4.61053, 3.421, 0.38 * 0.5, [0.86532, 0.12109, 0.11625], [self.r_half_light * -0.320761, 0.0, self.r_half_light *  0.502978], 0.063], 
                                              [394.141 * self.M_star, self.r_half_light * 7.78911, [0.8096, 0.37985, 0.12231],    [-0.926019 * self.r_half_light, 0.0,  0.205662 * self.r_half_light], self.r_half_light * 9.01535, 0.220, 0.50 * 0.5, [0.13043, 0.06138, 0.25887], [self.r_half_light * -0.239458, 0.0, self.r_half_light *  0.710510], 0.099], 
                                              [36.2004 * self.M_star, self.r_half_light * 0.34282, [0.56108, -0.22852, 0.46365],  [ 0.667165 * self.r_half_light, 0.0, -0.175201 * self.r_half_light], self.r_half_light * 3.58756, 2.816, 0.01 * 0.5, [0.20857, 0.31259, 0.38234], [self.r_half_light * -0.009860, 0.0, self.r_half_light *  0.310334], 0.126], 
                                              [27.7382 * self.M_star, self.r_half_light * 4.63981, [0.61714, -0.32227, 0.56383],  [ 0.264839 * self.r_half_light, 0.0,  0.923001 * self.r_half_light], self.r_half_light * 5.40202, 0.178, 0.11 * 0.5, [0.35140, 0.67466, 0.34438], [self.r_half_light *  0.340286, 0.0, self.r_half_light *  0.937203], 0.147], 
                                              [158.105 * self.M_star, self.r_half_light * 2.74217, [-0.55506, -0.31206, 0.12619], [-0.355355 * self.r_half_light, 0.0, -0.370042 * self.r_half_light], self.r_half_light * 4.02124, 8.937, 0.28 * 0.5, [0.78811, 0.12478, 0.30429], [self.r_half_light *  0.016749, 0.0, self.r_half_light *  0.576579], 0.134], 
                                              [364.086 * self.M_star, self.r_half_light * 9.72036, [-0.40152, 0.20618, 0.64831],  [-0.005521 * self.r_half_light, 0.0,  0.106930 * self.r_half_light], self.r_half_light * 7.25672, 0.256, 0.38 * 0.5, [0.07977, 0.01323, 0.79784], [self.r_half_light * -0.283389, 0.0, self.r_half_light * -0.353031], 0.115], 
                                              [298.880 * self.M_star, self.r_half_light * 8.30054, [0.37486, -0.74585, 0.44142],  [ 0.503805 * self.r_half_light, 0.0,  0.809693 * self.r_half_light], self.r_half_light * 4.94741, 9.700, 0.01 * 0.5, [0.49318, 0.62746, 0.0567],  [self.r_half_light * -0.324506, 0.0, self.r_half_light * -0.789659], 0.079], 
                                              [333.780 * self.M_star, self.r_half_light * 4.91279, [-0.34021, -0.52407,0.23569],  [-0.815147 * self.r_half_light, 0.0, -0.201820 * self.r_half_light], self.r_half_light * 4.07568, 0.102, 0.71 * 0.5, [0.60066, 0.21862, 0.31554], [self.r_half_light * -0.102077, 0.0, self.r_half_light * -0.781587], 0.118], 
                                              [218.733 * self.M_star, self.r_half_light * 9.71805, [0.21806, -0.34819, 0.74236],  [ 0.131029 * self.r_half_light, 0.0, -0.131214 * self.r_half_light], self.r_half_light * 1.13678, 6.140, 0.85 * 0.5, [0.26163, 0.43839, 0.76370], [self.r_half_light *  0.406344, 0.0, self.r_half_light *  0.910403], 0.094], 
                                              [291.068 * self.M_star, self.r_half_light * 8.90565, [-0.35566, -0.28895, 0.16422], [-0.905713 * self.r_half_light, 0.0,  0.001587 * self.r_half_light], self.r_half_light * 9.79058, 0.163, 0.41 * 0.5, [0.57180, 0.08405, 0.62365], [self.r_half_light *  0.529736, 0.0, self.r_half_light *  0.766631], 0.146], 
                                              [27.8322 * self.M_star, self.r_half_light * 9.31273, [-0.25770, -0.22602, 0.65810], [-0.969475 * self.r_half_light, 0.0,  0.615186 * self.r_half_light], self.r_half_light * 0.47352, 6.080, 0.03 * 0.5, [0.04953, 0.28668, 0.11944], [self.r_half_light * -0.640839, 0.0, self.r_half_light * -0.472590], 0.055], 
                                              [155.007 * self.M_star, self.r_half_light * 3.74650, [0.73302, -0.65836, 0.00382],  [ 0.817637 * self.r_half_light, 0.0,  0.284261 * self.r_half_light], self.r_half_light * 1.23498, 0.112, 0.50 * 0.5, [0.92610, 0.17984, 0.05382], [self.r_half_light * -0.572590, 0.0, self.r_half_light * -0.879245], 0.111], 
                                              [297.019 * self.M_star, self.r_half_light * 1.70005, [0.47097, 0.17027, 0.45018],   [-0.456172 * self.r_half_light, 0.0,  0.943982 * self.r_half_light], self.r_half_light * 8.89732, 5.495, 0.02 * 0.5, [0.26845, 0.02691, 0.63862], [self.r_half_light * -0.907563, 0.0, self.r_half_light *  0.461077], 0.112], 
                                              [156.967 * self.M_star, self.r_half_light * 8.53027, [-0.42381, 0.73640, 0.36167],  [-0.707703 * self.r_half_light, 0.0, -0.525231 * self.r_half_light], self.r_half_light * 2.71563, 0.375, 0.18 * 0.5, [0.40839, 0.40857, 0.54072], [self.r_half_light * -0.174382, 0.0, self.r_half_light *  0.899440], 0.070], 
                                              [162.881 * self.M_star, self.r_half_light * 9.55432, [0.31775, 0.30951, 0.57559],   [-0.630136 * self.r_half_light, 0.0,  0.539884 * self.r_half_light], self.r_half_light * 1.13510, 3.547, 0.35 * 0.5, [0.95662, 0.10685, 0.00593], [self.r_half_light * -0.552180, 0.0, self.r_half_light *  0.008670], 0.083],
                                              [355.597 * self.M_star, self.r_half_light * 0.25964, [0.51878, -0.27079, 0.29728],  [ 0.895990 * self.r_half_light, 0.0,  0.923338 * self.r_half_light], self.r_half_light * 9.89234, 0.127, 0.38 * 0.5, [0.31739, 0.07114, 0.60076], [self.r_half_light * -0.353461, 0.0, self.r_half_light * -0.460671], 0.101]
	                                   ]
        #{'M':0,'rs':1,'halo_sym_axis':2,'halo_center':3,'zeta':4,'el':5,'eps':6,'disk_sym_axis':7,'disk_center':8,'lam':9}
        elif draw == 'best_fit':
            self.startParametersWithDisk =[[9800.0 * 10.0 ** 6.0 , 6900.0, [0.71812629776318881, 0.0, -0.69591279659231431], [-72.0, 0.0, -145.0], 0.307 * 9800.0 * 10.0 ** 6.0, 0.427, 0.1 * 0.064, [0.054195335764850909, 0.0, -0.99853035285930847], [199.0, 0.0, -300.0], 0.1] , #NFW Obl WOD
                                              [6000.0 * 10.0 ** 6.0, 3500.0, [0.69716510285456457, 0.0, 0.71691060765048276], [-73.0, 0.0, -147.0],  0.47 * 6000.0 * 10.0 ** 6.0, 2.160, 0.06, [0.054195335764850909, 0.0, -0.99853035285930847], [195.0, 0.0, -300.0], 0.1] , #NFW Pro WOD
                                              [3370.0 * 10.0 ** 6.0, 1860.0, [0.72296714590956856, 0.0, -0.69088241107685799], [-72.0, 0.0, -145.0], 1.0 * 3370.0 * 10.0 ** 6.0, 0.466, 0.00, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Obl WOD
                                              [3200.0 * 10.0 ** 6.0, 1020.0, [0.6921431738704068, 0.0, 0.72176022809836216], [-72.0, 0.0, -144.0],  1.0 * 3200.0 * 10.0 ** 6.0, 2.04, 0.00, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Pro WOD
                                              [480.0 * 10.0 ** 6.0 , 1450.0, [0.72296714590956856, 0.0, -0.69088241107685799], [-74.0, 0.0, -149.0], 1.0 * 480.0 * 10.0 ** 6.0, 0.466, 0.00, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #Burkert Obl WOD
                                              [500.0 * 10.0 ** 6.0 , 830.0, [0.69340182827581298, 0.0, 0.72055111168033048], [-73.0, 0.0, -145.0],  1.0 * 500.0 * 10.0 ** 6.0, 2.02, 0.00, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1]  #Burkert Pro WOD
                                              ]
        elif draw == 'test':
            self.startParametersWithDisk =[[8.587455914154990196e+09, 3.829752462557314175e+03, [7.009092642998508982e-01,0.000000000000000000e+00,7.132504491541815650e-01], [-1.388017101740483383e+02,0.000000000000000000e+00,-1.400154202388922613e+02], 4.511197670577145602e-01 * 8.587455914154990196e+09, 2.160000000000000142e+00,1.409738201437771114e-02, [7.660512571018597283e-01,0.000000000000000000e+00,-6.427794890105472669e-01], [4.426018416512122826e+02,0.000000000000000000e+00,3.924504606951299479e+01], 0.1] , #NFW Obl WOD (from start param = 9) target_likelihood = 2.108236030365676561e+04
                                              [8.587455914154990196e+09, 3.829752462557314175e+03, [7.009092642998508982e-01,0.000000000000000000e+00,7.132504491541815650e-01], [-1.388017101740483383e+02,0.000000000000000000e+00,-1.400154202388922613e+02], 4.511197670577145602e-01 * 8.587455914154990196e+09, 2.160000000000000142e+00,1.409738201437771114e-02, [7.660512571018597283e-01,0.000000000000000000e+00,-6.427794890105472669e-01], [4.426018416512122826e+02,0.000000000000000000e+00,3.924504606951299479e+01], 0.1] , #NFW Pro WOD (from start param = 9) target_likelihood = 2.045569989732860995e+04
                                              [2.023644847128327847e+09, 3.011400279999999839e+03, [6.114354707349896056e-01, 0.0, -7.912942974185279699e-01], [-1.276999999999999886e+02, 0.0, 8.750000000000000000e+01], 1.0 * 2.023644847128327847e+09, 1.749999999999999889e-01, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Obl WOD (from start param = 9) target_liklihood = 2.080252594354362373e+04 
                                              [2.023644847128327847e+09, 3.011400279999999839e+03, [6.114354707349896056e-01, 0.0, -7.912942974185279699e-01], [-1.276999999999999886e+02, 0.0, 8.750000000000000000e+01],  1.0 * 2.023644847128327847e+09, 5.714285714285714413e+00, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #cored Pro WOD (from start param = 9) target_liklihood = 2.021626550687130293e+04 
                                              [1.190855390975193739e+09 , 5.566678319999999985e+03, [5.453209358290151965e-01, 0.0, 8.382273420418634435e-01], [-1.276999999999999886e+02, 0.0, -2.791999999999999886e+02], 1.0 * 1.190855390975193739e+09, 1.185817621249851822e-01, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1] , #Burkert Obl WOD (from start param = 8) target_likelihood = 2.070609255126753851e+04
                                              [2.023644847128327847e+09 , 3.011400279999999839e+03, [6.114354707349896056e-01, 0.0, -7.912942974185279699e-01], [-1.276999999999999886e+02, 0.0, 8.750000000000000000e+01],  1.0 * 2.023644847128327847e+09, 5.714285714285714413e+00, 0.0, [0.0, 0.0, 1.0], [0.0, 0.0, 0.0], 0.1]  #Burkert Pro WOD (from start param = 9) target_likelihood = 2.039299063390566880e+04 
                                              ]

        else: 
            self.startParametersWithDisk = [[33.2098 * self.M_star, self.r_half_light * 2.40463, [-0.06359, -0.01797, 0.92016], [ 0.931289 * self.r_half_light, 0.0, -0.160347 * self.r_half_light], self.r_half_light * 0.31335, 6.102, 0.94 * 0.5, [0.35286, 0.13946, 0.07458], [self.r_half_light * -0.616464, 0.0, self.r_half_light *  0.741201], 0.146], 
                                              [76.0015 * self.M_star, self.r_half_light * 4.58130, [-0.68151, 0.14758, 0.04311],  [ 0.071182 * self.r_half_light, 0.0, -0.439432 * self.r_half_light], self.r_half_light * 0.79053, 0.131, 0.75 * 0.5, [0.13476, 0.90747, 0.18082], [self.r_half_light *  0.179174, 0.0, self.r_half_light *  0.950004], 0.053], 
                                              [243.756 * self.M_star, self.r_half_light * 6.85736, [-0.73428, 0.60676, 0.20308],  [ 0.308487 * self.r_half_light, 0.0, -0.710001 * self.r_half_light], self.r_half_light * 5.44512, 8.031, 0.21 * 0.5, [0.08247, 0.81961, 0.18082], [self.r_half_light * -0.259135, 0.0, self.r_half_light * -0.062295], 0.113], 
                                              [49.9908 * self.M_star, self.r_half_light * 3.64581, [-0.36101, -0.45968, 0.67935], [-0.105918 * self.r_half_light, 0.0,  0.021938 * self.r_half_light], self.r_half_light * 8.58897, 0.149, 0.92 * 0.5, [0.10453, 0.73033, 0.45908], [self.r_half_light * -0.322928, 0.0, self.r_half_light *  0.605429], 0.130], 
                                              [359.741 * self.M_star, self.r_half_light * 3.64197, [-0.11814, 0.06451, 0.49192],  [ 0.084916 * self.r_half_light, 0.0,  0.222427 * self.r_half_light], self.r_half_light * 6.56862, 6.467, 0.70 * 0.5, [0.29386, 0.73316, 0.54300], [self.r_half_light *  0.346246, 0.0, self.r_half_light *  0.516271], 0.079], 
                                              [10.6003 * self.M_star, self.r_half_light * 7.88415, [-0.24971, 0.72445, 0.60275],  [ 0.991573 * self.r_half_light, 0.0, -0.848307 * self.r_half_light], self.r_half_light * 9.88729, 0.103, 0.87 * 0.5, [0.50305, 0.83862, 0.09410], [self.r_half_light * -0.495998, 0.0, self.r_half_light *  0.689914], 0.147], 
                                              [94.6352 * self.M_star, self.r_half_light * 6.29512, [0.70303, -0.28512, 0.01099],  [-0.699474 * self.r_half_light, 0.0,  0.926123 * self.r_half_light], self.r_half_light * 1.70263, 1.281, 0.26 * 0.5, [0.39449, 0.25723, 0.10307], [self.r_half_light * -0.578461, 0.0, self.r_half_light * -0.256999], 0.124], 
                                              [32.0792 * self.M_star, self.r_half_light * 8.75576, [0.10046, 0.76190, 0.49025],   [ 0.845711 * self.r_half_light, 0.0, -0.690266 * self.r_half_light], self.r_half_light * 1.84246, 0.112, 0.54 * 0.5, [0.32146, 0.10639, 0.89147], [self.r_half_light * -0.905269, 0.0, self.r_half_light * -0.879323], 0.092], 
                                              [224.299 * self.M_star, self.r_half_light * 3.25532, [0.11986, 0.50397, 0.18424],   [ 0.027837 * self.r_half_light, 0.0,  0.735703 * self.r_half_light], self.r_half_light * 9.58113, 8.433, 0.41 * 0.5, [0.41739, 0.30403, 0.54962], [self.r_half_light *  0.883405, 0.0, self.r_half_light * -0.546639], 0.076], 
                                              [170.094 * self.M_star, self.r_half_light * 3.29244, [-0.02893, -0.92939, 0.03744], [-0.113862 * self.r_half_light, 0.0, -0.632998 * self.r_half_light], self.r_half_light * 2.97241, 0.175, 0.60 * 0.5, [0.54591, 0.02908, 0.46969], [self.r_half_light *  0.247234, 0.0, self.r_half_light * -0.020757], 0.088], 
                                              [326.867 * self.M_star, self.r_half_light * 8.51755, [-0.39061, -0.01523, 0.0419],  [-0.866768 * self.r_half_light, 0.0,  0.915189 * self.r_half_light], self.r_half_light * 3.59749, 6.434, 0.91 * 0.5, [0.45392, 0.71450, 0.08588], [self.r_half_light *  0.855101, 0.0, self.r_half_light *  0.263176], 0.135], 
                                              [30.1313 * self.M_star, self.r_half_light * 7.00521, [0.15434, -0.22401, 0.05141],  [-0.451551 * self.r_half_light, 0.0, -0.813468 * self.r_half_light], self.r_half_light * 9.33160, 0.455, 0.86 * 0.5, [0.00765, 0.63314, 0.09110], [self.r_half_light *  0.271353, 0.0, self.r_half_light * -0.334659], 0.103], 
                                              [341.647 * self.M_star, self.r_half_light * 4.74737, [0.09645, 0.10003, 0.15474],   [-0.111719 * self.r_half_light, 0.0,  0.707548 * self.r_half_light], self.r_half_light * 7.00513, 8.235, 0.83 * 0.5, [0.34118, 0.24194 ,0.35505], [self.r_half_light *  0.827668, 0.0, self.r_half_light *  0.218344], 0.070], 
                                              [364.523 * self.M_star, self.r_half_light * 3.21550, [0.89324, 0.00262, 0.27069],   [ 0.409562 * self.r_half_light, 0.0,  0.472091 * self.r_half_light], self.r_half_light * 8.47694, 0.336, 0.73 * 0.5, [0.15882, 0.05565, 0.94530], [self.r_half_light *  0.672264, 0.0, self.r_half_light *  0.689940], 0.124], 
                                              [170.426 * self.M_star, self.r_half_light * 5.16923, [0.42512, -0.49009, 0.63460],  [ 0.999177 * self.r_half_light, 0.0,  0.809342 * self.r_half_light], self.r_half_light * 3.74160, 4.631, 0.40 * 0.5, [0.07195, 0.57611, 0.14523], [self.r_half_light *  0.749331, 0.0, self.r_half_light *  0.340600], 0.107], 
                                              [317.728 * self.M_star, self.r_half_light * 3.28685, [0.48098, 0.14876, 0.68992],   [-0.113046 * self.r_half_light, 0.0, -0.406528 * self.r_half_light], self.r_half_light * 7.43129, 0.372, 0.46 * 0.5, [0.19318, 0.54428, 0.02894], [self.r_half_light * -0.851454, 0.0, self.r_half_light *  0.707999], 0.066], 
                                              [362.203 * self.M_star, self.r_half_light * 6.30652, [-0.05124, -0.39002, 0.63549], [ 0.683266 * self.r_half_light, 0.0,  0.151801 * self.r_half_light], self.r_half_light * 1.60497, 5.417, 0.26 * 0.5, [0.11318, 0.32292, 0.14523], [self.r_half_light * -0.420846, 0.0, self.r_half_light * -0.348548], 0.088], 
                                              [309.452 * self.M_star, self.r_half_light * 9.40949, [-0.73533, 0.27922, 0.08652],  [-0.400037 * self.r_half_light, 0.0,  0.321842 * self.r_half_light], self.r_half_light * 3.96955, 0.666, 0.54 * 0.5, [0.19318, 0.54428, 0.02894], [self.r_half_light *  0.352989, 0.0, self.r_half_light * -0.101943], 0.115], 
                                              [80.2184 * self.M_star, self.r_half_light * 4.34019, [-0.08978, -0.49215, 0.5346],  [-0.383851 * self.r_half_light, 0.0,  0.435933 * self.r_half_light], self.r_half_light * 6.34753, 3.869, 0.95 * 0.5, [0.11318, 0.32292, 0.51462], [self.r_half_light *  0.506790, 0.0, self.r_half_light * -0.335048], 0.147], 
                                              [288.710 * self.M_star, self.r_half_light * 4.45108, [0.57384, -0.31836, 0.60926],  [ 0.839351 * self.r_half_light, 0.0,  0.478494 * self.r_half_light], self.r_half_light * 1.95564, 0.153, 0.24 * 0.5, [0.10536, 0.46602, 0.22891], [self.r_half_light *  0.768552, 0.0, self.r_half_light * -0.980655], 0.121], 
                                              [329.540 * self.M_star, self.r_half_light * 1.94879, [-0.00659, -0.49763, 0.11612], [ 0.673005 * self.r_half_light, 0.0,  0.519243 * self.r_half_light], self.r_half_light * 9.37993, 2.835, 0.81 * 0.5, [0.80891, 0.16780, 0.13534], [self.r_half_light *  0.305460, 0.0, self.r_half_light * -0.369589], 0.061], 
                                              [316.644 * self.M_star, self.r_half_light * 5.54665, [-0.52118, 0.19206, 0.43382],  [-0.818049 * self.r_half_light, 0.0,  0.456168 * self.r_half_light], self.r_half_light * 6.05056, 0.258, 0.72 * 0.5, [0.40629, 0.71603, 0.19603], [self.r_half_light * -0.229001, 0.0, self.r_half_light *  0.686624], 0.121], 
                                              [351.974 * self.M_star, self.r_half_light * 7.69308, [0.04933, -0.58622, 0.19584],  [-0.114996 * self.r_half_light, 0.0, -0.308072 * self.r_half_light], self.r_half_light * 0.49236, 7.775, 0.44 * 0.5, [0.29432, 0.53399, 0.15683], [self.r_half_light *  0.766701, 0.0, self.r_half_light *  0.550899], 0.091], 
                                              [1.30646 * self.M_star, self.r_half_light * 8.94678, [-0.71056, -0.49361, 0.25157], [-0.746779 * self.r_half_light, 0.0, -0.195189 * self.r_half_light], self.r_half_light * 4.69708, 0.387, 0.91 * 0.5, [0.28926, 0.33985, 0.86246], [self.r_half_light * -0.980169, 0.0, self.r_half_light * -0.874713], 0.127], 
                                              [244.485 * self.M_star, self.r_half_light * 4.19878, [0.80002, 0.52432, 0.08064],   [ 0.395217 * self.r_half_light, 0.0, -0.923268 * self.r_half_light], self.r_half_light * 0.64386, 7.363, 0.29 * 0.5, [0.67433, 0.20126, 0.51019], [self.r_half_light *  0.042877, 0.0, self.r_half_light *  0.746211], 0.079], 
                                              [174.898 * self.M_star, self.r_half_light * 6.33529, [0.44090, -0.30206, 0.78671],  [-0.271076 * self.r_half_light, 0.0,  0.241789 * self.r_half_light], self.r_half_light * 3.90402, 0.290, 0.18 * 0.5, [0.65156, 0.24518, 0.04335], [self.r_half_light *  0.257554, 0.0, self.r_half_light * -0.334178], 0.101], 
                                              [212.641 * self.M_star, self.r_half_light * 4.47719, [-0.72153, 0.02388, 0.61768],  [-0.983529 * self.r_half_light, 0.0,  0.886849 * self.r_half_light], self.r_half_light * 4.61053, 3.421, 0.38 * 0.5, [0.86532, 0.12109, 0.11625], [self.r_half_light * -0.320761, 0.0, self.r_half_light *  0.502978], 0.063], 
                                              [394.141 * self.M_star, self.r_half_light * 7.78911, [0.8096, 0.37985, 0.12231],    [-0.926019 * self.r_half_light, 0.0,  0.205662 * self.r_half_light], self.r_half_light * 9.01535, 0.220, 0.50 * 0.5, [0.13043, 0.06138, 0.25887], [self.r_half_light * -0.239458, 0.0, self.r_half_light *  0.710510], 0.099], 
                                              [36.2004 * self.M_star, self.r_half_light * 0.34282, [0.56108, -0.22852, 0.46365],  [ 0.667165 * self.r_half_light, 0.0, -0.175201 * self.r_half_light], self.r_half_light * 3.58756, 2.816, 0.01 * 0.5, [0.20857, 0.31259, 0.38234], [self.r_half_light * -0.009860, 0.0, self.r_half_light *  0.310334], 0.126], 
                                              [27.7382 * self.M_star, self.r_half_light * 4.63981, [0.61714, -0.32227, 0.56383],  [ 0.264839 * self.r_half_light, 0.0,  0.923001 * self.r_half_light], self.r_half_light * 5.40202, 0.178, 0.11 * 0.5, [0.35140, 0.67466, 0.34438], [self.r_half_light *  0.340286, 0.0, self.r_half_light *  0.937203], 0.147], 
                                              [158.105 * self.M_star, self.r_half_light * 2.74217, [-0.55506, -0.31206, 0.12619], [-0.355355 * self.r_half_light, 0.0, -0.370042 * self.r_half_light], self.r_half_light * 4.02124, 8.937, 0.28 * 0.5, [0.78811, 0.12478, 0.30429], [self.r_half_light *  0.016749, 0.0, self.r_half_light *  0.576579], 0.134], 
                                              [364.086 * self.M_star, self.r_half_light * 9.72036, [-0.40152, 0.20618, 0.64831],  [-0.005521 * self.r_half_light, 0.0,  0.106930 * self.r_half_light], self.r_half_light * 7.25672, 0.256, 0.38 * 0.5, [0.07977, 0.01323, 0.79784], [self.r_half_light * -0.283389, 0.0, self.r_half_light * -0.353031], 0.115], 
                                              [298.880 * self.M_star, self.r_half_light * 8.30054, [0.37486, -0.74585, 0.44142],  [ 0.503805 * self.r_half_light, 0.0,  0.809693 * self.r_half_light], self.r_half_light * 4.94741, 9.700, 0.01 * 0.5, [0.49318, 0.62746, 0.0567],  [self.r_half_light * -0.324506, 0.0, self.r_half_light * -0.789659], 0.079], 
                                              [333.780 * self.M_star, self.r_half_light * 4.91279, [-0.34021, -0.52407,0.23569],  [-0.815147 * self.r_half_light, 0.0, -0.201820 * self.r_half_light], self.r_half_light * 4.07568, 0.102, 0.71 * 0.5, [0.60066, 0.21862, 0.31554], [self.r_half_light * -0.102077, 0.0, self.r_half_light * -0.781587], 0.118], 
                                              [218.733 * self.M_star, self.r_half_light * 9.71805, [0.21806, -0.34819, 0.74236],  [ 0.131029 * self.r_half_light, 0.0, -0.131214 * self.r_half_light], self.r_half_light * 1.13678, 6.140, 0.85 * 0.5, [0.26163, 0.43839, 0.76370], [self.r_half_light *  0.406344, 0.0, self.r_half_light *  0.910403], 0.094], 
                                              [291.068 * self.M_star, self.r_half_light * 8.90565, [-0.35566, -0.28895, 0.16422], [-0.905713 * self.r_half_light, 0.0,  0.001587 * self.r_half_light], self.r_half_light * 9.79058, 0.163, 0.41 * 0.5, [0.57180, 0.08405, 0.62365], [self.r_half_light *  0.529736, 0.0, self.r_half_light *  0.766631], 0.146], 
                                              [27.8322 * self.M_star, self.r_half_light * 9.31273, [-0.25770, -0.22602, 0.65810], [-0.969475 * self.r_half_light, 0.0,  0.615186 * self.r_half_light], self.r_half_light * 0.47352, 6.080, 0.03 * 0.5, [0.04953, 0.28668, 0.11944], [self.r_half_light * -0.640839, 0.0, self.r_half_light * -0.472590], 0.055], 
                                              [155.007 * self.M_star, self.r_half_light * 3.74650, [0.73302, -0.65836, 0.00382],  [ 0.817637 * self.r_half_light, 0.0,  0.284261 * self.r_half_light], self.r_half_light * 1.23498, 0.112, 0.50 * 0.5, [0.92610, 0.17984, 0.05382], [self.r_half_light * -0.572590, 0.0, self.r_half_light * -0.879245], 0.111], 
                                              [297.019 * self.M_star, self.r_half_light * 1.70005, [0.47097, 0.17027, 0.45018],   [-0.456172 * self.r_half_light, 0.0,  0.943982 * self.r_half_light], self.r_half_light * 8.89732, 5.495, 0.02 * 0.5, [0.26845, 0.02691, 0.63862], [self.r_half_light * -0.907563, 0.0, self.r_half_light *  0.461077], 0.112], 
                                              [156.967 * self.M_star, self.r_half_light * 8.53027, [-0.42381, 0.73640, 0.36167],  [-0.707703 * self.r_half_light, 0.0, -0.525231 * self.r_half_light], self.r_half_light * 2.71563, 0.375, 0.18 * 0.5, [0.40839, 0.40857, 0.54072], [self.r_half_light * -0.174382, 0.0, self.r_half_light *  0.899440], 0.070], 
                                              [162.881 * self.M_star, self.r_half_light * 9.55432, [0.31775, 0.30951, 0.57559],   [-0.630136 * self.r_half_light, 0.0,  0.539884 * self.r_half_light], self.r_half_light * 1.13510, 3.547, 0.35 * 0.5, [0.95662, 0.10685, 0.00593], [self.r_half_light * -0.552180, 0.0, self.r_half_light *  0.008670], 0.083],
                                              [355.597 * self.M_star, self.r_half_light * 0.25964, [0.51878, -0.27079, 0.29728],  [ 0.895990 * self.r_half_light, 0.0,  0.923338 * self.r_half_light], self.r_half_light * 9.89234, 0.127, 0.38 * 0.5, [0.31739, 0.07114, 0.60076], [self.r_half_light * -0.353461, 0.0, self.r_half_light * -0.460671], 0.101]
	                                   ]
